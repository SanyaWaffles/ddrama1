/* *******************************************************************
 *		base_weapons.zsc
 *
 *		Base weapon for Daytime Drama Classes
 *
 *		As long as you attribute it to me in some
 *		way I don't mind people using this. Considering how much
 *		some people have caused an uproar over the lack of proper
 *		examples and the like.
 *
 *		Copyright Sanya K. C. Waffles 2013-2017
 *
 * ****************************************************************** */

// Weapon
Class DD_Weapon : Weapon
{
	Default
	{
		//$NotAngled
		//$Category "Weapons"
		//$Color 14

		Radius 26;
		Height 12;
		Scale 0.10;
		Weapon.Kickback 100;
		Weapon.MinSelectionAmmo1 0;
		Weapon.MinSelectionAmmo2 0;
		Weapon.BobStyle "Smooth";
		Weapon.BobSpeed 1.0;
		Weapon.UpSound "weapons/raiseA";
		Inventory.PickupSound "pickups/weapon";
		
		+WEAPON.NODEATHINPUT
	}
	
	action bool func_CheckButtonPressed(int button)
	{
		return ((GetPlayerInput(-1, INPUT_BUTTONS) & button) && !((GetPlayerInput(-1, INPUT_OLDBUTTONS) & button)));
	}

	// Check if a key or button is being held down
	action bool func_CheckButtonHeld(int button)
	{
		return !!(GetPlayerInput(-1, INPUT_BUTTONS) & button);
	}

	// Check if a key or button is NOT being held down
	action bool func_CheckButtonUp(int button)
	{
		return !(GetPlayerInput(-1, INPUT_BUTTONS) & button);
	}
		
	action void A_DDWeaponReady()
	{
		A_WeaponReady();
		
		if (CountInv("DD_CrushFlag") > 0)
		{
			A_Overlay(DD_PSP_FOOTCRUSH, "FootCrush");
			A_TakeInventory("DD_CrushFlag", 255);
		}
	}
	
	action bool CheckForPepperPowerup()
	{
		return CountInv("DD_SyoPepperPowerStrength") ? true : false;
	}
	
	action void A_DDClearCrushFlag()
	{
		// A_TakeInventory("DD_CrushFlag", 1);
		
		A_SetInventory("DD_CrushFlag", 0);
	}

	States
	{
		FootCrush:
			TNT1 A 0
			{
				if (pitch >= 91)
					A_SetPitch(0);
			}
			TNT1 A 2
			{
				A_TakeInventory("DD_UnfungoCounter", Random[DDWepon](1,3));
				A_SetPitch(22);
			}
			TNT1 A 2 A_SetPitch(44);
			FUTG A 7 A_SetPitch(22);
			TNT1 A 1 A_SetPitch(0);
			Stop;
			
		ClearCrush:
			TNT1 A 0 A_TakeInventory("DD_CrushFlag", 1);
			Stop;
		
		LightDone:
			TNT1 A 0 A_Light0;
			Stop;
	}
}

// Shrunken Claw Hand
Class DD_ShrunkenHands : DD_Weapon
{
	Default
	{
		Weapon.SelectionOrder 3700;
		Weapon.Kickback 100;
		Weapon.UpSound "weapons/raiseNone";

		+WEAPON.WIMPY_WEAPON
		+WEAPON.MELEEWEAPON
	}

	States
	{
		Ready:
			CLWG A 1 A_WeaponReady(WRF_NOFIRE);
			Loop;
		
		Deselect:
			CLWG A 1 A_Lower;
			Loop;
		
		Select:
			CLWG A 1 A_Raise;
			Loop;
		
		Fire:
			CLWG A 1;
			Goto Ready;
	}
}

// Blank Dummy Weapon
Class DD_WeaponBlank : DD_Weapon
{
	Default
	{
		Weapon.SelectionOrder 10000;
		Weapon.UpSound "weapons/raiseNone";
	}

	States
	{
		Ready:
			TNT1 A 1
			{
				A_SetCrosshair(8);
				A_WeaponReady(WRF_NOFIRE);
			}
			Wait;
		
		Deselect:
			TNT1 A 1
			{
				A_SetCrosshair(0);
				A_Lower();
			}
			Wait;
		
		Select:
			TNT1 A 1
			{
				A_SetCrosshair(8);
				A_Raise();
			}
			Wait;
		
		Fire:
			TNT1 A 5;
			Goto Ready;
	}
}

Class DD_CrushFlag : Inventory
{
	Default
	{
		Inventory.Amount 1;
		Inventory.MaxAmount 1;
	}
}